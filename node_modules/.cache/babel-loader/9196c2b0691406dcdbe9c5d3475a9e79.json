{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useContext}from'react';import\"./CreateRun.css\";import ActionsContext from'../../Contexts/ActionsContext';import SSHTerminal from'../../Terminals/SSHTerminal';import RunMultipleSSH from'../Manage/RunMultipleSSH';import{useHistory}from'react-router-dom';import{IS_DEV,TEST_CLUSTER,USE_TEST_CLUSTER,CRUSTER_DIR}from'../../constants';var statuses={INITIALIZING_MASTER:\"Initializing master...\",INITIALIZING_SLAVES:\"Initializing slaves...\",INITIALIZING_CNI:\"Initializing CNI...\",INACTIVE:\"\"};export var getHostname=function getHostname(_ref){var clusterName=_ref.clusterName,cluster=_ref.cluster,ip=_ref.ip,index=_ref.index;return\"\".concat(clusterName?clusterName+\"-\":\"\")+\"\".concat(cluster.master===ip?\"master\":\"slave-\"+(index+1));};var CreateRun=function CreateRun(_ref2){var cluster=_ref2.cluster,clusterName=_ref2.clusterName;if(IS_DEV&&USE_TEST_CLUSTER){cluster=TEST_CLUSTER;}var history=useHistory();var INITIALIZING_MASTER=statuses.INITIALIZING_MASTER,INITIALIZING_SLAVES=statuses.INITIALIZING_SLAVES,INITIALIZING_CNI=statuses.INITIALIZING_CNI,INACTIVE=statuses.INACTIVE;var _useContext=useContext(ActionsContext),sshTerm=_useContext.sshTerm,multiSSH=_useContext.multiSSH;var _useState=useState(INACTIVE),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),term=_useState4[0],setTerm=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),processes=_useState6[0],setProcesses=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),note=_useState8[0],setNote=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),finished=_useState10[0],setFinished=_useState10[1];var common=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref3){var runCmd,ip,index,hostname;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:runCmd=_ref3.runCmd,ip=_ref3.ip,index=_ref3.index;hostname=getHostname({clusterName:clusterName,cluster:cluster,ip:ip,index:index});_context.next=4;return runCmd({status:\"Setting hostname \".concat(hostname,\" for \").concat(ip),cmd:\"echo \".concat(hostname,\" > /etc/hostname\\nsudo hostnamectl set-hostname \").concat(hostname)});case 4:_context.next=6;return runCmd({status:\"Setting clustername \".concat(clusterName,\" for \").concat(ip),cmd:\"echo \".concat(clusterName,\" > \").concat(CRUSTER_DIR,\"/clustername\")});case 6:_context.next=8;return runCmd({status:\"Setting masterip \".concat(cluster.master,\" for \").concat(ip),cmd:\"echo \".concat(cluster.master,\" > \").concat(CRUSTER_DIR,\"/masterip\")});case 8:case\"end\":return _context.stop();}}},_callee);}));return function common(_x){return _ref4.apply(this,arguments);};}();var joinSlaves=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(joinCmd){var _multiSSH,startAll,processes,endAll;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_multiSSH=multiSSH({ips:cluster.slaves,hostname:'root',interactive:true}),startAll=_multiSSH.startAll,processes=_multiSSH.processes,endAll=_multiSSH.endAll;setStatus(INITIALIZING_SLAVES);setProcesses(processes);_context3.next=5;return new Promise(function(res,rej){return setTimeout(res,1000);});case 5:_context3.next=7;return startAll();case 7:_context3.next=9;return new Promise(function(res,rej){return setTimeout(res,1000);});case 9:_context3.next=11;return Promise.all(processes.map(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref6,index){var ip,runCmd;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:ip=_ref6.ip,runCmd=_ref6.runCmd;_context2.next=3;return runCmd({status:\"Initializing slave \".concat(ip),cmd:joinCmd});case 3:_context2.next=5;return common({runCmd:runCmd,ip:ip,index:index});case 5:_context2.next=7;return runCmd({status:\"\",cmd:\"echo SLAVE > \".concat(CRUSTER_DIR,\"/status\")});case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref7.apply(this,arguments);};}()));case 11:setFinished(true);_context3.next=14;return endAll();case 14:setStatus(INACTIVE);history.push(\"/clusters/manage\");case 16:case\"end\":return _context3.stop();}}},_callee3);}));return function joinSlaves(_x2){return _ref5.apply(this,arguments);};}();useEffect(function(){var _sshTerm=sshTerm({host:cluster.master,username:\"root\"}),term=_sshTerm.term,runCmd=_sshTerm.runCmd,endTerm=_sshTerm.endTerm,startTerm=_sshTerm.startTerm,getOutput=_sshTerm.getOutput;setTerm(term);var hostname=getHostname({clusterName:clusterName,cluster:cluster,ip:cluster.master,index:0});var initMasterCmd=\"kubeadm init  --pod-network-cidr=10.244.0.0/16 --node-name=\".concat(hostname,\"\\n      kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\\n      kubeadm token create --print-join-command\\n      echo MASTER > \").concat(CRUSTER_DIR,\"/status\\n      mkdir -p $HOME/.kube\\n      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\\n      sudo chown $(id -u):$(id -g) $HOME/.kube/config\\n      \");_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var outputLines,joinCmd;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return startTerm();case 2:setStatus(INITIALIZING_MASTER);setNote(\"Pulling the images can take some time. Don't exit, or you will have to redo it!\");_context4.next=6;return runCmd({status:INITIALIZING_MASTER,cmd:initMasterCmd});case 6:_context4.next=8;return runCmd({status:\"Setting clustername \".concat(clusterName,\" for \").concat(cluster.master),cmd:\"echo \".concat(clusterName,\" > \").concat(CRUSTER_DIR,\"/clustername\")});case 8:_context4.next=10;return common({runCmd:runCmd,ip:cluster.master,index:0});case 10:_context4.next=12;return getOutput({cmd:\"kubeadm token create --print-join-command\"});case 12:outputLines=_context4.sent.split(\"\\n\");joinCmd=outputLines[outputLines.length-2];_context4.next=16;return joinSlaves(joinCmd);case 16:_context4.next=18;return endTerm();case 18:_context4.next=20;return initializeCNI();case 20:setTerm(null);case 21:case\"end\":return _context4.stop();}}},_callee4);}))();return endTerm;},[]);var initializeCNI=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var _sshTerm2,term,runCmd,endTerm,startTerm;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:setNote(\"\");_sshTerm2=sshTerm({host:cluster.master,username:\"root\"}),term=_sshTerm2.term,runCmd=_sshTerm2.runCmd,endTerm=_sshTerm2.endTerm,startTerm=_sshTerm2.startTerm;setTerm(term);_context5.next=5;return startTerm();case 5:setStatus(INITIALIZING_CNI);_context5.next=8;return runCmd({status:INITIALIZING_CNI,cmd:\"kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\"});case 8:_context5.next=10;return endTerm();case 10:case\"end\":return _context5.stop();}}},_callee5);}));return function initializeCNI(){return _ref9.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h4\",null,status),/*#__PURE__*/React.createElement(\"div\",{className:\"warning\"},\"Note: \",note),!term?\"\":/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(SSHTerminal,{term:term})),!processes.length?\"\":/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(RunMultipleSSH,{processes:processes,finished:finished,showInit:true})));};export default CreateRun;","map":{"version":3,"sources":["C:/Users/zwhit/dev/cruster/app/src/Clusters/Create/CreateRun.tsx"],"names":["React","useEffect","useState","useContext","ActionsContext","SSHTerminal","RunMultipleSSH","useHistory","IS_DEV","TEST_CLUSTER","USE_TEST_CLUSTER","CRUSTER_DIR","statuses","INITIALIZING_MASTER","INITIALIZING_SLAVES","INITIALIZING_CNI","INACTIVE","getHostname","clusterName","cluster","ip","index","master","CreateRun","history","sshTerm","multiSSH","status","setStatus","term","setTerm","processes","setProcesses","note","setNote","finished","setFinished","common","runCmd","hostname","cmd","joinSlaves","joinCmd","ips","slaves","interactive","startAll","endAll","Promise","res","rej","setTimeout","all","map","push","host","username","endTerm","startTerm","getOutput","initMasterCmd","outputLines","split","length","initializeCNI"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\nimport \"./CreateRun.css\"\r\nimport ActionsContext from '../../Contexts/ActionsContext';\r\nimport SSHTerminal from '../../Terminals/SSHTerminal';\r\nimport RunMultipleSSH from '../Manage/RunMultipleSSH';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport {\r\n  IS_DEV,\r\n  TEST_CLUSTER,\r\n  USE_TEST_CLUSTER,\r\n  CRUSTER_DIR,\r\n} from '../../constants'\r\n\r\nconst statuses = {\r\n  INITIALIZING_MASTER: \"Initializing master...\",\r\n  INITIALIZING_SLAVES: \"Initializing slaves...\",\r\n  INITIALIZING_CNI: \"Initializing CNI...\",\r\n  INACTIVE: \"\",\r\n}\r\n\r\nexport const getHostname = ({clusterName, cluster, ip, index}) => (\r\n  `${clusterName ? clusterName + \"-\" : \"\"}` +\r\n  `${cluster.master === ip ? \"master\" : \"slave-\" +(index+1)}`\r\n)\r\n\r\n\r\nconst CreateRun = ({cluster, clusterName}) => {\r\n  if (IS_DEV && USE_TEST_CLUSTER) {\r\n    cluster = TEST_CLUSTER\r\n  }\r\n  const history = useHistory()\r\n  const {\r\n    INITIALIZING_MASTER,\r\n    INITIALIZING_SLAVES,\r\n    INITIALIZING_CNI,\r\n    INACTIVE,\r\n  } = statuses\r\n  const {sshTerm, multiSSH} = useContext(ActionsContext)\r\n  const [status, setStatus] = useState(INACTIVE)\r\n  const [term, setTerm] = useState<any>()\r\n  const [processes, setProcesses] = useState<any[]>([])\r\n  const [note, setNote] = useState(\"\")\r\n  const [finished, setFinished] = useState(false)\r\n  const common = async ({runCmd, ip, index}) => {\r\n    const hostname = getHostname({\r\n        clusterName,\r\n        cluster,\r\n        ip,\r\n        index,\r\n      })\r\n    await runCmd({\r\n      status: `Setting hostname ${hostname} for ${ip}`,\r\n      cmd: `echo ${hostname} > /etc/hostname\\nsudo hostnamectl set-hostname ${hostname}`\r\n    })\r\n    await runCmd({\r\n      status: `Setting clustername ${clusterName} for ${ip}`,\r\n      cmd: `echo ${clusterName} > ${CRUSTER_DIR}/clustername`\r\n    })\r\n    await runCmd({\r\n      status: `Setting masterip ${cluster.master} for ${ip}`,\r\n      cmd: `echo ${cluster.master} > ${CRUSTER_DIR}/masterip`\r\n    })\r\n  }\r\n  const joinSlaves = async (joinCmd: string) => {\r\n    const {startAll, processes, endAll} = multiSSH({\r\n      ips: cluster.slaves,\r\n      hostname: 'root',\r\n      interactive: true,\r\n    })\r\n    setStatus(INITIALIZING_SLAVES)\r\n    setProcesses(processes)\r\n    await new Promise((res, rej) => setTimeout(res, 1000))\r\n    await startAll()\r\n    await new Promise((res, rej) => setTimeout(res, 1000))\r\n    await Promise.all(processes.map(async ({ip, runCmd}, index) => {\r\n      await runCmd({\r\n        status: `Initializing slave ${ip}`,\r\n        cmd: joinCmd,\r\n      })\r\n      await common({runCmd, ip, index})\r\n      await runCmd({\r\n        status: \"\",\r\n        cmd: `echo SLAVE > ${CRUSTER_DIR}/status`\r\n      })\r\n    }))\r\n\r\n    setFinished(true)\r\n    await endAll()\r\n    setStatus(INACTIVE)\r\n\r\n    history.push(\"/clusters/manage\")\r\n  }\r\n  useEffect(() => {\r\n    const {term, runCmd, endTerm, startTerm, getOutput} = sshTerm({\r\n      host: cluster.master,\r\n      username: \"root\",\r\n    })\r\n    setTerm(term)\r\n    const hostname = getHostname({\r\n        clusterName,\r\n        cluster,\r\n        ip: cluster.master,\r\n        index:0,\r\n      })\r\n      const initMasterCmd =\r\n      `kubeadm init  --pod-network-cidr=10.244.0.0/16 --node-name=${hostname}\r\n      kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\r\n      kubeadm token create --print-join-command\r\n      echo MASTER > ${CRUSTER_DIR}/status\r\n      mkdir -p $HOME/.kube\r\n      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\r\n      sudo chown $(id -u):$(id -g) $HOME/.kube/config\r\n      `\r\n\r\n    ;(async () =>{\r\n      await startTerm()\r\n      setStatus(INITIALIZING_MASTER)\r\n      setNote(\"Pulling the images can take some time. Don't exit, or you will have to redo it!\")\r\n      await runCmd({\r\n        status: INITIALIZING_MASTER,\r\n        cmd: initMasterCmd,\r\n      })\r\n      await runCmd({\r\n        status: `Setting clustername ${clusterName} for ${cluster.master}`,\r\n        cmd: `echo ${clusterName} > ${CRUSTER_DIR}/clustername`\r\n      })\r\n\r\n      await common({runCmd, ip: cluster.master, index: 0})\r\n\r\n      // get rid of warning\r\n      const outputLines = (await getOutput({cmd: \"kubeadm token create --print-join-command\"})).split(\"\\n\")\r\n      const joinCmd = outputLines[outputLines.length - 2]\r\n      await joinSlaves(joinCmd)\r\n      await endTerm()\r\n      await initializeCNI()\r\n      setTerm(null)\r\n    })()\r\n    return endTerm\r\n  }, [])\r\n  const initializeCNI = async () => {\r\n      setNote(\"\")\r\n    const {term, runCmd, endTerm, startTerm} = sshTerm({\r\n      host: cluster.master,\r\n      username: \"root\",\r\n    })\r\n    setTerm(term)\r\n\r\n    await startTerm()\r\n    setStatus(INITIALIZING_CNI)\r\n    await runCmd({\r\n      status: INITIALIZING_CNI,\r\n      cmd: `kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml`\r\n    })\r\n\r\n    await endTerm()\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h4>{status}</h4>\r\n      <div className=\"warning\">Note: {note}</div>\r\n      {!term ? \"\" : <div>\r\n        <SSHTerminal term={term} />\r\n      </div>}\r\n      {!processes.length ? \"\" : (\r\n        <div>\r\n          <RunMultipleSSH processes={processes} finished={finished} showInit={true} />\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\nexport default CreateRun\r\n"]},"metadata":{},"sourceType":"module"}