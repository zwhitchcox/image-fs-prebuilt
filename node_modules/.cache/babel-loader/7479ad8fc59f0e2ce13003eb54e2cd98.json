{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useHistory}from'react-router-dom';export var getHostname=function getHostname(_ref){var clusterName=_ref.clusterName,cluster=_ref.cluster,ip=_ref.ip,index=_ref.index;return\"\".concat(clusterName?clusterName+\"-\":\"\")+\"\".concat(cluster.master===ip?\"master\":\"slave-\"+(index+1),\".local\");};var validateClusterName=function validateClusterName(name){if(!name.length)return true;return /^[A-Za-z0-9]([A-Za-z0-9]|-){0,55}$/.test(name);};var lastNumIP=function lastNumIP(ip){return Number(ip.split('.')[3]);};var sortByIP=function sortByIP(a,b){return lastNumIP(a)-lastNumIP(b);};var validateCluster=function validateCluster(cluster){var errors=[];if(!cluster.master){errors.push(\"Cluster must have master node.\");}if(!cluster.slaves.length){errors.push(\"Cluster must have at least one slave node.\");}return errors;};var CreateSetup=function CreateSetup(_ref2){var clusterName=_ref2.clusterName,setClusterName=_ref2.setClusterName,cluster=_ref2.cluster,setMaster=_ref2.setMaster,addNode=_ref2.addNode,removeNode=_ref2.removeNode,nodes=_ref2.nodes,addNodes=_ref2.addNodes,removeAll=_ref2.removeAll;var history=useHistory();var clusterErrors=validateCluster(cluster);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),attempted=_useState2[0],setAttempted=_useState2[1];var launch=function launch(){setAttempted(true);if(!clusterErrors.length){history.push(\"/clusters/create/run\");}};var ips=Object.keys(nodes);ips.sort(sortByIP);var availableIPs=ips.filter(function(ip){return nodes[ip].apiResponded&&nodes[ip].status===\"UNINITIALIZED\"&&ip!==cluster.master&&!cluster.slaves.includes(ip);});// const availableIPs = ips\n//   .filter(ip => (\n//     ip !== cluster.master &&\n//     !cluster.slaves.includes(ip) &&\n//     nodes[ip].apiResponded &&\n//     nodes[ip].status === \"UNINITIALIZED\"))\nvar nonresponsive=ips.filter(function(ip){return!nodes[ip].apiResponded;});var takenIPs=ips.filter(function(ip){return nodes[ip].apiResponded&&nodes[ip].status!==\"UNINITIALIZED\";});// const uninitialized = ips.filter(ip => {\n//   nodes[ip].apiResponded &&\n//   nodes[ip].status === \"UNINITIALIZED\"\n// })\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"upper-create\"},/*#__PURE__*/React.createElement(\"label\",null,\"Cluster Name\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Cluster Name\",value:clusterName,onChange:function onChange(e){return setClusterName(e.target.value);}}),validateClusterName(clusterName)?\"\":\"Invalid Name.\")),/*#__PURE__*/React.createElement(\"h4\",null,\"Cluster Nodes\"),!attempted?\"\":clusterErrors.map(function(err){return/*#__PURE__*/React.createElement(\"div\",{className:\"error\"},err);}),!cluster.master&&!cluster.slaves.length?\"You have not added any nodes.\":/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"table\",{className:\"node-list\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"ip\"),/*#__PURE__*/React.createElement(\"th\",{colSpan:2},\"actions\"),/*#__PURE__*/React.createElement(\"th\",null),/*#__PURE__*/React.createElement(\"th\",null,\"new hostname\"))),/*#__PURE__*/React.createElement(\"tbody\",null,cluster.master===\"\"?null:/*#__PURE__*/React.createElement(ClusterNode,{ip:cluster.master,setMaster:setMaster,clusterName:clusterName,cluster:cluster,addNode:addNode,removeNode:removeNode,index:null}),cluster.slaves.map(function(ip,index){return/*#__PURE__*/React.createElement(ClusterNode,Object.assign({key:ip},{ip:ip,clusterName:clusterName,setMaster:setMaster,cluster:cluster,addNode:addNode,removeNode:removeNode,index:index}));}))),cluster.master!==\"\"||cluster.slaves.length?/*#__PURE__*/React.createElement(\"div\",{onClick:removeAll,className:\"action indent-1 top-margin\"},\"Remove All\"):\"\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{className:\"button-two\",onClick:launch},\"Launch\")),availableIPs.length?/*#__PURE__*/React.createElement(\"h4\",null,\"Available Nodes\"):\"\",/*#__PURE__*/React.createElement(\"table\",{className:\"available-node-list\"},/*#__PURE__*/React.createElement(\"tbody\",null,availableIPs.map(function(ip){return/*#__PURE__*/React.createElement(AvailableNode,Object.assign({key:ip},{ip:ip,setMaster:setMaster,addNode:addNode}));}))),availableIPs.length?/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return addNodes(availableIPs);},className:\"action indent-1 top-margin\"},\"Add All\"):\"\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),nonresponsive.length===0?\"\":/*#__PURE__*/React.createElement(\"div\",null,\"The following ip addresses have a cluster, but the api didn't respond for some reason:\",/*#__PURE__*/React.createElement(\"table\",{className:\"available-node-list\"},/*#__PURE__*/React.createElement(\"tbody\",null,nonresponsive.map(function(ip){return/*#__PURE__*/React.createElement(NonResponsiveNode,{key:ip,ip:ip});})))),takenIPs.length===0?\"\":/*#__PURE__*/React.createElement(\"div\",null,\"The following nodes are already in use:\",/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"tbody\",null,takenIPs.sort(sortByIP).map(function(ip){return/*#__PURE__*/React.createElement(\"tr\",{key:ip},/*#__PURE__*/React.createElement(\"td\",null,ip,\"\\xA0\\xA0\"),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"action\",onClick:function onClick(){return history.push(\"/clusters/node-ssh/\".concat(ip));}},\"ssh\"),/*#__PURE__*/React.createElement(\"span\",{className:\"action\",onClick:function onClick(){return history.push(\"/clusters/node-ssh/\".concat(ip,\"/reset\"));}},\"reset\")));})))));};export default CreateSetup;var NonResponsiveNode=function NonResponsiveNode(_ref3){var ip=_ref3.ip;var history=useHistory();return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,ip),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"action\",onClick:function onClick(){return history.push(\"/clusters/node-ssh/\".concat(ip));}},\"ssh\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"action\",onClick:function onClick(){return history.push(\"/clusters/node-ssh/\".concat(ip,\"/reset\"));}},\"reset\")));};var AvailableNode=function AvailableNode(_ref4){var ip=_ref4.ip,addNode=_ref4.addNode,setMaster=_ref4.setMaster;var history=useHistory();return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,ip),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"action\",onClick:function onClick(){return addNode(ip);}},\"Add\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"action\",onClick:function onClick(){return setMaster(ip);}},\"Make Master\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"action\",onClick:function onClick(){return history.push(\"/clusters/node-ssh/\".concat(ip));}},\"ssh\")));};var ClusterNode=function ClusterNode(_ref5){var ip=_ref5.ip,removeNode=_ref5.removeNode,setMaster=_ref5.setMaster,cluster=_ref5.cluster,clusterName=_ref5.clusterName,index=_ref5.index;var history=useHistory();return/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,ip),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"action\",onClick:function onClick(){return removeNode(ip);}},\"Remove\")),/*#__PURE__*/React.createElement(\"td\",null,cluster.master===ip?\" Master\":/*#__PURE__*/React.createElement(\"span\",{className:\"action\",onClick:function onClick(){return setMaster(ip);}},\"Make Master\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"action\",onClick:function onClick(){return history.push(\"/clusters/node-ssh/\".concat(ip));}},\"ssh\")),/*#__PURE__*/React.createElement(\"td\",null,getHostname({clusterName:clusterName,cluster:cluster,ip:ip,index:index})));};","map":{"version":3,"sources":["C:/Users/zwhit/dev/cruster/app/src/Clusters/Create/CreateSetup.tsx"],"names":["React","useState","useHistory","getHostname","clusterName","cluster","ip","index","master","validateClusterName","name","length","test","lastNumIP","Number","split","sortByIP","a","b","validateCluster","errors","push","slaves","CreateSetup","setClusterName","setMaster","addNode","removeNode","nodes","addNodes","removeAll","history","clusterErrors","attempted","setAttempted","launch","ips","Object","keys","sort","availableIPs","filter","apiResponded","status","includes","nonresponsive","takenIPs","e","target","value","map","err","NonResponsiveNode","AvailableNode","ClusterNode"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const getHostname = ({clusterName, cluster, ip, index}) => (\r\n  `${clusterName ? clusterName + \"-\" : \"\"}` +\r\n  `${cluster.master === ip ? \"master\" : \"slave-\" +(index+1)}.local`\r\n)\r\nconst validateClusterName = name => {\r\n  if (!name.length) return true\r\n  return /^[A-Za-z0-9]([A-Za-z0-9]|-){0,55}$/.test(name)\r\n}\r\nconst lastNumIP = ip => Number(ip.split('.')[3])\r\nconst sortByIP = (a, b) => lastNumIP(a) - lastNumIP(b)\r\nconst validateCluster = (cluster) => {\r\n  const errors: string[] = []\r\n  if (!cluster.master) {\r\n    errors.push(\"Cluster must have master node.\")\r\n  }\r\n  if (!cluster.slaves.length) {\r\n    errors.push(\"Cluster must have at least one slave node.\")\r\n  }\r\n  return errors\r\n}\r\n\r\nconst CreateSetup = ({\r\n  clusterName,\r\n  setClusterName,\r\n  cluster,\r\n  setMaster,\r\n  addNode,\r\n  removeNode,\r\n  nodes,\r\n  addNodes,\r\n  removeAll,\r\n}) => {\r\n  const history = useHistory()\r\n  const clusterErrors = validateCluster(cluster)\r\n  const [attempted, setAttempted] = useState(false)\r\n  const launch = () => {\r\n    setAttempted(true)\r\n    if (!clusterErrors.length) {\r\n      history.push(\"/clusters/create/run\")\r\n    }\r\n  }\r\n  const ips = Object.keys(nodes)\r\n  ips.sort(sortByIP)\r\n  const availableIPs = ips.filter(ip =>\r\n      nodes[ip].apiResponded &&\r\n      nodes[ip].status === \"UNINITIALIZED\" &&\r\n      ip !== cluster.master &&\r\n      !cluster.slaves.includes(ip))\r\n  // const availableIPs = ips\r\n  //   .filter(ip => (\r\n  //     ip !== cluster.master &&\r\n  //     !cluster.slaves.includes(ip) &&\r\n  //     nodes[ip].apiResponded &&\r\n  //     nodes[ip].status === \"UNINITIALIZED\"))\r\n\r\n  const nonresponsive = ips\r\n      .filter(ip => !nodes[ip].apiResponded)\r\n  const takenIPs = ips.filter(ip => nodes[ip].apiResponded && nodes[ip].status !== \"UNINITIALIZED\")\r\n  // const uninitialized = ips.filter(ip => {\r\n  //   nodes[ip].apiResponded &&\r\n  //   nodes[ip].status === \"UNINITIALIZED\"\r\n  // })\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"upper-create\">\r\n        <label>\r\n        Cluster Name<br />\r\n        <input\r\n          placeholder=\"Cluster Name\"\r\n          value={clusterName}\r\n          onChange={e => setClusterName(e.target.value)}\r\n        />\r\n        {validateClusterName(clusterName) ? \"\" : \"Invalid Name.\"}\r\n        </label>\r\n      </div>\r\n      <h4>Cluster Nodes</h4>\r\n      {!attempted ? \"\" : clusterErrors.map(err => <div className=\"error\">{err}</div>)}\r\n      {(!cluster.master && !cluster.slaves.length) ? \"You have not added any nodes.\" : <div>\r\n        <table className=\"node-list\">\r\n          <thead>\r\n            <tr>\r\n            <th>ip</th>\r\n            <th colSpan={2}>actions</th>\r\n            <th></th>\r\n            <th>new hostname</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {cluster.master === \"\"  ? null : <ClusterNode\r\n            {...({\r\n              ip: cluster.master,\r\n              setMaster,\r\n              clusterName,\r\n              cluster,\r\n              addNode,\r\n              removeNode,\r\n              index: null,\r\n            })}\r\n          />}\r\n          {cluster.slaves.map((ip, index) => (\r\n            <ClusterNode\r\n              key={ip}\r\n              {...({\r\n                ip,\r\n                clusterName,\r\n                setMaster,\r\n                cluster,\r\n                addNode,\r\n                removeNode,\r\n                index,\r\n              })}\r\n            />\r\n          ))}\r\n          </tbody>\r\n        </table>\r\n        {cluster.master !== \"\" || cluster.slaves.length  ? <div onClick={removeAll} className=\"action indent-1 top-margin\">Remove All</div> : \"\"}\r\n        <br />\r\n        <button className=\"button-two\" onClick={launch}>Launch</button>\r\n      </div>}\r\n      {availableIPs.length ? <h4>Available Nodes</h4> : \"\"}\r\n      {/* {uninitialized.length && Object.values(nodes).length ? \"Couldn't find any uninitialized nodes...\": \"\"} */}\r\n      <table className=\"available-node-list\">\r\n      <tbody>\r\n        {availableIPs\r\n          .map(ip => (\r\n          <AvailableNode\r\n            key={ip}\r\n            {...({\r\n              ip,\r\n              setMaster,\r\n              addNode,\r\n            })}\r\n          />\r\n        ))}\r\n      </tbody>\r\n      </table>\r\n      {availableIPs.length ? <div onClick={() => addNodes(availableIPs)} className=\"action indent-1 top-margin\">Add All</div> : \"\"}\r\n      <br />\r\n      <br />\r\n      {nonresponsive.length === 0 ? \"\" : <div>\r\n        The following ip addresses have a cluster, but the api didn't respond for some reason:\r\n        <table className=\"available-node-list\">\r\n        <tbody>\r\n          {nonresponsive\r\n            .map(ip => (\r\n            <NonResponsiveNode\r\n              key={ip}\r\n              ip={ip}\r\n            />\r\n          ))}\r\n        </tbody>\r\n        </table>\r\n      </div>}\r\n      {takenIPs.length === 0 ? \"\" : <div>\r\n        The following nodes are already in use:\r\n        <table>\r\n          <tbody>\r\n          {takenIPs.sort(sortByIP).map(ip => (\r\n            <tr key={ip}>\r\n            <td>\r\n              {ip}&nbsp;&nbsp;\r\n            </td>\r\n            <td>\r\n            <span\r\n                className=\"action\"\r\n                onClick={() => history.push(`/clusters/node-ssh/${ip}`)}\r\n              >ssh</span>\r\n            <span\r\n                className=\"action\"\r\n                onClick={() => history.push(`/clusters/node-ssh/${ip}/reset`)}\r\n              >reset</span>\r\n            </td>\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </table>\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\nexport default CreateSetup\r\n\r\nconst NonResponsiveNode = ({ip}) => {\r\n  const history = useHistory()\r\n  return <tr>\r\n    <td>\r\n    {ip}\r\n    </td>\r\n    <td>\r\n      <span className=\"action\" onClick={() => history.push(`/clusters/node-ssh/${ip}`)}>ssh</span>\r\n    </td>\r\n    <td>\r\n    <span\r\n        className=\"action\"\r\n        onClick={() => history.push(`/clusters/node-ssh/${ip}/reset`)}\r\n      >reset</span>\r\n    </td>\r\n  </tr>\r\n}\r\n\r\nconst AvailableNode = ({ip, addNode, setMaster}) => {\r\n  const history = useHistory()\r\n  return (\r\n    <tr>\r\n      <td>\r\n      {ip}\r\n      </td>\r\n      <td>\r\n        <span className=\"action\" onClick={() => addNode(ip)}>Add</span>\r\n      </td>\r\n      <td>\r\n        <span className=\"action\" onClick={() => setMaster(ip)}>Make Master</span>\r\n      </td>\r\n      <td>\r\n        <span className=\"action\" onClick={() => history.push(`/clusters/node-ssh/${ip}`)}>ssh</span>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nconst ClusterNode = ({ip, removeNode, setMaster, cluster, clusterName, index}) => {\r\n  const history = useHistory()\r\n  return (\r\n    <tr>\r\n      <td>\r\n      {ip}\r\n      </td>\r\n      <td>\r\n      <span className=\"action\" onClick={() => removeNode(ip)}>Remove</span>\r\n      </td>\r\n      <td>\r\n        {cluster.master === ip ? \" Master\" : <span className=\"action\" onClick={() => setMaster(ip)}>Make Master</span>}\r\n      </td>\r\n      <td>\r\n        <span className=\"action\" onClick={() => history.push(`/clusters/node-ssh/${ip}`)}>ssh</span>\r\n      </td>\r\n      <td>\r\n        {getHostname({clusterName, cluster, ip, index})}\r\n      </td>\r\n    </tr>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}