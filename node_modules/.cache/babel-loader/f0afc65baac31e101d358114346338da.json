{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import ActionsContext from'../../Contexts/ActionsContext';import SystemInfoContext from'../../Contexts/SystemInfoContext';import RunMultipleSSH from'./RunMultipleSSH';import\"./RunCmdAll.css\";var RunCmdAll=function RunCmdAll(){var _useContext=useContext(SystemInfoContext),nodes=_useContext.nodes;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),processes=_useState2[0],setProcesses=_useState2[1];var _useContext2=useContext(ActionsContext),multiSSH=_useContext2.multiSSH;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),finished=_useState4[0],setFinished=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),running=_useState6[0],setRunning=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),cmd=_useState8[0],setCmd=_useState8[1];var _useState9=useState(\"root\"),_useState10=_slicedToArray(_useState9,2),username=_useState10[0],setUsername=_useState10[1];var ips=Object.keys(nodes);var run=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _multiSSH,runAll,startAll,endAll,processes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setRunning(true);_multiSSH=multiSSH({ips:ips,username:username,interactive:true}),runAll=_multiSSH.runAll,startAll=_multiSSH.startAll,endAll=_multiSSH.endAll,processes=_multiSSH.processes;setProcesses(processes);_context.next=5;return startAll();case 5:_context.next=7;return runAll({cmd:cmd});case 7:setFinished(true);_context.next=10;return endAll();case 10:case\"end\":return _context.stop();}}},_callee);}));return function run(){return _ref.apply(this,arguments);};}();// TODO: no spell check, better interface in general for command entering\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"br\",null),\"examples:\",/*#__PURE__*/React.createElement(\"ul\",{style:{listStyleType:'none',lineHeight:1.5}},/*#__PURE__*/React.createElement(\"li\",null,\"Reboot:\"),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"pre\",null,\"reboot\")),/*#__PURE__*/React.createElement(\"li\",null,\"Change Password:\"),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"pre\",null,\"echo \\\"pi:new_password\\\" | chpasswd\"))),running?\"\":/*#__PURE__*/React.createElement(\"div\",null,\"username: \",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:username,onChange:function onChange(e){return setUsername(e.target.value);}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),\"command: \",/*#__PURE__*/React.createElement(\"input\",{className:\"console-input\",type:\"text\",value:cmd,onChange:function onChange(e){return setCmd(e.target.value);}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{onClick:run},\"Run\")),!running?\"\":/*#__PURE__*/React.createElement(RunMultipleSSH,{processes:processes,finished:finished,showInit:false}));};export default RunCmdAll;","map":{"version":3,"sources":["C:/Users/zwhit/dev/cruster/app/src/Clusters/Manage/RunCmdAll.tsx"],"names":["React","useState","useContext","ActionsContext","SystemInfoContext","RunMultipleSSH","RunCmdAll","nodes","processes","setProcesses","multiSSH","finished","setFinished","running","setRunning","cmd","setCmd","username","setUsername","ips","Object","keys","run","interactive","runAll","startAll","endAll","listStyleType","lineHeight","e","target","value"],"mappings":"0dAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAAuD,OAAvD,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,kCAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAO,iBAAP,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,iBACJJ,UAAU,CAACE,iBAAD,CADN,CACdG,KADc,aACdA,KADc,eAEYN,QAAQ,CAAM,EAAN,CAFpB,wCAEfO,SAFe,eAEJC,YAFI,gCAGDP,UAAU,CAACC,cAAD,CAHT,CAGdO,QAHc,cAGdA,QAHc,gBAIUT,QAAQ,CAAC,KAAD,CAJlB,yCAIfU,QAJe,eAILC,WAJK,8BAKQX,QAAQ,CAAC,KAAD,CALhB,yCAKfY,OALe,eAKNC,UALM,8BAMAb,QAAQ,CAAC,EAAD,CANR,yCAMfc,GANe,eAMVC,MANU,8BAOUf,QAAQ,CAAC,MAAD,CAPlB,0CAOfgB,QAPe,gBAOLC,WAPK,gBAQtB,GAAMC,CAAAA,GAAG,CAAGC,MAAM,CAACC,IAAP,CAAYd,KAAZ,CAAZ,CACA,GAAMe,CAAAA,GAAG,0FAAG,kLACVR,UAAU,CAAC,IAAD,CAAV,CADU,UAEoCJ,QAAQ,CAAC,CACrDS,GAAG,CAAHA,GADqD,CAErDF,QAAQ,CAARA,QAFqD,CAGrDM,WAAW,CAAE,IAHwC,CAAD,CAF5C,CAEHC,MAFG,WAEHA,MAFG,CAEKC,QAFL,WAEKA,QAFL,CAEeC,MAFf,WAEeA,MAFf,CAEuBlB,SAFvB,WAEuBA,SAFvB,CAOVC,YAAY,CAACD,SAAD,CAAZ,CAPU,sBAQJiB,CAAAA,QAAQ,EARJ,8BASJD,CAAAA,MAAM,CAAC,CAACT,GAAG,CAAHA,GAAD,CAAD,CATF,QAUVH,WAAW,CAAC,IAAD,CAAX,CAVU,uBAWJc,CAAAA,MAAM,EAXF,wDAAH,kBAAHJ,CAAAA,GAAG,0CAAT,CAcA;AACA,mBAAQ,4CACN,8BADM,0BAGN,0BAAI,KAAK,CAAE,CAACK,aAAa,CAAE,MAAhB,CAAwBC,UAAU,CAAE,GAApC,CAAX,eACE,wCADF,cAEE,2CAAI,wCAAJ,CAFF,cAGE,iDAHF,cAIE,2CAAI,qEAAJ,CAJF,CAHM,CAULf,OAAO,CAAG,EAAH,cAAQ,yDACJ,8BADI,cACE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEI,QAA1B,CAAoC,QAAQ,CAAE,kBAAAY,CAAC,QAAIX,CAAAA,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EAA/C,EADF,cACmF,8BADnF,cACwF,8BADxF,0BAEL,6BAAO,SAAS,CAAC,eAAjB,CAAiC,IAAI,CAAC,MAAtC,CAA6C,KAAK,CAAEhB,GAApD,CAAyD,QAAQ,CAAE,kBAAAc,CAAC,QAAIb,CAAAA,MAAM,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,EAApE,EAFK,cAE4F,8BAF5F,cAGd,8BAAQ,OAAO,CAAET,GAAjB,QAHc,CAVV,CAeL,CAACT,OAAD,CAAW,EAAX,cAAgB,oBAAC,cAAD,EAAgB,SAAS,CAAEL,SAA3B,CAAsC,QAAQ,CAAEG,QAAhD,CAA0D,QAAQ,CAAE,KAApE,EAfX,CAAR,CAkBD,CA1CD,CA4CA,cAAeL,CAAAA,SAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\r\nimport ActionsContext from '../../Contexts/ActionsContext';\r\nimport SystemInfoContext from '../../Contexts/SystemInfoContext';\r\nimport RunMultipleSSH from './RunMultipleSSH';\r\nimport \"./RunCmdAll.css\"\r\n\r\nconst RunCmdAll = () => {\r\n  const { nodes } = useContext(SystemInfoContext)\r\n  const [processes, setProcesses] = useState<any>([])\r\n  const { multiSSH } = useContext(ActionsContext)\r\n  const [finished, setFinished] = useState(false)\r\n  const [running, setRunning] = useState(false)\r\n  const [cmd, setCmd] = useState(\"\")\r\n  const [username, setUsername] = useState(\"root\")\r\n  const ips = Object.keys(nodes)\r\n  const run = async () => {\r\n    setRunning(true)\r\n    const {runAll, startAll, endAll, processes} = multiSSH({\r\n      ips,\r\n      username,\r\n      interactive: true,\r\n    })\r\n    setProcesses(processes)\r\n    await startAll()\r\n    await runAll({cmd})\r\n    setFinished(true)\r\n    await endAll()\r\n  }\r\n\r\n  // TODO: no spell check, better interface in general for command entering\r\n  return (<div>\r\n    <br />\r\n    examples:\r\n    <ul style={{listStyleType: 'none', lineHeight: 1.5}}>\r\n      <li>Reboot:</li>\r\n      <li><pre>reboot</pre></li>\r\n      <li>Change Password:</li>\r\n      <li><pre>echo \"pi:new_password\" | chpasswd</pre></li>\r\n    </ul>\r\n\r\n    {running ? \"\" : <div>\r\n      username: <br /><input type=\"text\" value={username} onChange={e => setUsername(e.target.value)}/><br/><br />\r\n      command: <input className=\"console-input\" type=\"text\" value={cmd} onChange={e => setCmd(e.target.value)}/><br/>\r\n      <button onClick={run}>Run</button>\r\n    </div>}\r\n    {!running ? \"\" : <RunMultipleSSH processes={processes} finished={finished} showInit={false} />}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default RunCmdAll\r\n"]},"metadata":{},"sourceType":"module"}