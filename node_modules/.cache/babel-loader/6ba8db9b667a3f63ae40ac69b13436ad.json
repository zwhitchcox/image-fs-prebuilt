{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import\"./Flash.css\";import React,{useState,useContext}from'react';import SystemInfoContext from'../Contexts/SystemInfoContext';import ActionsContext from'../Contexts/ActionsContext';var parseDrive=function parseDrive(drive){return{name:drive.drive.description,location:drive.path,size:drive.drive.size};};var Flash=function Flash(){var _useContext=useContext(SystemInfoContext),drives=_useContext.drives;var _useContext2=useContext(ActionsContext),runAction=_useContext2.runAction;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),checkedDrives=_useState2[0],setCheckedDrives=_useState2[1];var toggleChecked=function toggleChecked(location){return setCheckedDrives(_objectSpread(_objectSpread({},checkedDrives),{},_defineProperty({},location,!checkedDrives[location])));};var parsedDrives={};for(var driveKey in drives){parsedDrives[driveKey]=parseDrive(drives[driveKey]);}var write=function write(){runAction({status:\"Writing to drives...\",args:{drives:Object.keys(checkedDrives)}});};return/*#__PURE__*/React.createElement(\"div\",{className:\"boxed\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"top-margin\"},\"Flash SD(s)\"),Object.values(parsedDrives).map(function(drive,i){return/*#__PURE__*/React.createElement(\"div\",{className:\"flash-flex\",key:drive.location},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",{className:\"checkbox-container\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:!!checkedDrives[drive.location],onChange:function onChange(){return toggleChecked(drive.location);}}),/*#__PURE__*/React.createElement(\"span\",{className:\"checkmark\"}))),/*#__PURE__*/React.createElement(\"div\",null,drive.location),/*#__PURE__*/React.createElement(\"div\",null,drive.name),/*#__PURE__*/React.createElement(\"div\",null,drive.size/Math.pow(10,9)|0,\"GB\"));}),/*#__PURE__*/React.createElement(\"button\",{onClick:write},\"Write\"));};export default Flash;","map":{"version":3,"sources":["C:/Users/zwhit/dev/cruster/app/src/Image/Flash.tsx"],"names":["React","useState","useContext","SystemInfoContext","ActionsContext","parseDrive","drive","name","description","location","path","size","Flash","drives","runAction","checkedDrives","setCheckedDrives","toggleChecked","parsedDrives","driveKey","write","status","args","Object","keys","values","map","i","Math","pow"],"mappings":"8dACA,MAAO,aAAP,CACA,MAAOA,CAAAA,KAAP,EAA2BC,QAA3B,CAA6CC,UAA7C,KAA+D,OAA/D,CACA,MAAOC,CAAAA,iBAAP,KAA8B,+BAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,4BAA3B,CAMA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,QAAmB,CACpCC,IAAI,CAAED,KAAK,CAACA,KAAN,CAAYE,WADkB,CAEpCC,QAAQ,CAAEH,KAAK,CAACI,IAFoB,CAGpCC,IAAI,CAAEL,KAAK,CAACA,KAAN,CAAYK,IAHkB,CAAnB,EAAnB,CAKA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,iBACDV,UAAU,CAACC,iBAAD,CADT,CACXU,MADW,aACXA,MADW,kBAEEX,UAAU,CAACE,cAAD,CAFZ,CAEXU,SAFW,cAEXA,SAFW,eAGwBb,QAAQ,CAAC,EAAD,CAHhC,wCAGXc,aAHW,eAGIC,gBAHJ,eAIlB,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACR,QAAD,QAAcO,CAAAA,gBAAgB,gCAC/CD,aAD+C,wBAEjDN,QAFiD,CAEtC,CAACM,aAAa,CAACN,QAAD,CAFwB,GAA9B,EAAtB,CAIA,GAAMS,CAAAA,YAAmC,CAAI,EAA7C,CACA,IAAK,GAAMC,CAAAA,QAAX,GAAuBN,CAAAA,MAAvB,CAA+B,CAC7BK,YAAY,CAACC,QAAD,CAAZ,CAAyBd,UAAU,CAACQ,MAAM,CAACM,QAAD,CAAP,CAAnC,CACD,CACD,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClBN,SAAS,CAAC,CACRO,MAAM,CAAE,sBADA,CAERC,IAAI,CAAE,CACJT,MAAM,CAAEU,MAAM,CAACC,IAAP,CAAYT,aAAZ,CADJ,CAFE,CAAD,CAAT,CAMD,CAPD,CASA,mBACE,2BAAK,SAAS,CAAC,OAAf,eACE,0BAAI,SAAS,CAAC,YAAd,gBADF,CAEKQ,MAAM,CAACE,MAAP,CAAcP,YAAd,EAA4BQ,GAA5B,CAAgC,SAACpB,KAAD,CAAQqB,CAAR,qBAC/B,2BAAK,SAAS,CAAC,YAAf,CAA4B,GAAG,CAAErB,KAAK,CAACG,QAAvC,eACE,4CACE,6BAAO,SAAS,CAAC,oBAAjB,eACE,6BACE,IAAI,CAAC,UADP,CAEE,OAAO,CAAE,CAAC,CAACM,aAAa,CAACT,KAAK,CAACG,QAAP,CAF1B,CAGE,QAAQ,CAAE,0BAAMQ,CAAAA,aAAa,CAACX,KAAK,CAACG,QAAP,CAAnB,EAHZ,EADF,cAME,4BAAM,SAAS,CAAC,WAAhB,EANF,CADF,CADF,cAWE,+BAAMH,KAAK,CAACG,QAAZ,CAXF,cAYE,+BAAMH,KAAK,CAACC,IAAZ,CAZF,cAaE,+BAAOD,KAAK,CAACK,IAAN,CAAWiB,IAAI,CAACC,GAAL,CAAS,EAAT,CAAa,CAAb,CAAZ,CAA6B,CAAnC,MAbF,CAD+B,EAAhC,CAFL,cAmBI,8BAAQ,OAAO,CAAET,KAAjB,UAnBJ,CADF,CAuBD,CA5CD,CA8CA,cAAeR,CAAAA,KAAf","sourcesContent":["\r\nimport \"./Flash.css\"\r\nimport React, { useEffect, useState, useRef, useContext } from 'react'\r\nimport SystemInfoContext from '../Contexts/SystemInfoContext';\r\nimport ActionsContext from '../Contexts/ActionsContext';\r\ntype Drive = {\r\n  name: string;\r\n  location: string;\r\n  size: number;\r\n}\r\nconst parseDrive = (drive): Drive => ({\r\n  name: drive.drive.description,\r\n  location: drive.path,\r\n  size: drive.drive.size,\r\n})\r\nconst Flash = () => {\r\n  const {drives} = useContext(SystemInfoContext)\r\n  const {runAction} = useContext(ActionsContext)\r\n  const [checkedDrives, setCheckedDrives] = useState({})\r\n  const toggleChecked = (location) => setCheckedDrives({\r\n    ...checkedDrives,\r\n    [location]: !checkedDrives[location]\r\n  })\r\n  const parsedDrives:{[key: string]: Drive}  = {}\r\n  for (const driveKey in drives) {\r\n    parsedDrives[driveKey] = parseDrive(drives[driveKey])\r\n  }\r\n  const write = () => {\r\n    runAction({\r\n      status: \"Writing to drives...\",\r\n      args: {\r\n        drives: Object.keys(checkedDrives)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"boxed\">\r\n      <h3 className=\"top-margin\">Flash SD(s)</h3>\r\n        {Object.values(parsedDrives).map((drive, i) => (\r\n          <div className=\"flash-flex\" key={drive.location}>\r\n            <div>\r\n              <label className=\"checkbox-container\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={!!checkedDrives[drive.location]}\r\n                  onChange={() => toggleChecked(drive.location)}\r\n                />\r\n                <span className=\"checkmark\" />\r\n              </label>\r\n            </div>\r\n            <div>{drive.location}</div>\r\n            <div>{drive.name}</div>\r\n            <div>{(drive.size/Math.pow(10, 9))|0}GB</div>\r\n          </div>\r\n        ))}\r\n        <button onClick={write}>Write</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Flash"]},"metadata":{},"sourceType":"module"}