{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\src\\\\Clusters\\\\Manage\\\\NodeSSH.tsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ActionsContext from '../../Contexts/ActionsContext';\nimport SSHTerminal from '../../Terminals/SSHTerminal';\nimport { RESET_CMD } from '../../constants';\n\nconst NodeSSH = () => {\n  const {\n    ip,\n    cmd\n  } = useParams();\n  const {\n    sshTerm\n  } = useContext(ActionsContext);\n  const [term, setTerm] = useState();\n  useEffect(() => {\n    const {\n      term,\n      endTerm,\n      startTerm,\n      runCmd\n    } = sshTerm({\n      host: ip,\n      username: \"root\",\n      interactive: true\n    });\n    setTerm(term);\n\n    (async () => {\n      await startTerm();\n\n      if (cmd === \"reset\") {\n        await runCmd({\n          cmd: RESET_CMD\n        });\n      }\n    })();\n\n    return endTerm;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SSHTerminal, {\n    term: term,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default NodeSSH;","map":{"version":3,"sources":["C:/Users/zwhit/dev/cruster/app/src/Clusters/Manage/NodeSSH.tsx"],"names":["React","useContext","useEffect","useState","useParams","ActionsContext","SSHTerminal","RESET_CMD","NodeSSH","ip","cmd","sshTerm","term","setTerm","endTerm","startTerm","runCmd","host","username","interactive"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,MAAYN,SAAS,EAA3B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAcV,UAAU,CAACI,cAAD,CAA9B;AAEA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAACU,MAAAA,IAAD;AAAOE,MAAAA,OAAP;AAAgBC,MAAAA,SAAhB;AAA2BC,MAAAA;AAA3B,QAAqCL,OAAO,CAAC;AACjDM,MAAAA,IAAI,EAAER,EAD2C;AAEjDS,MAAAA,QAAQ,EAAE,MAFuC;AAGjDC,MAAAA,WAAW,EAAE;AAHoC,KAAD,CAAlD;AAKAN,IAAAA,OAAO,CAACD,IAAD,CAAP;;AACC,KAAC,YAAY;AACZ,YAAMG,SAAS,EAAf;;AACA,UAAIL,GAAG,KAAK,OAAZ,EAAqB;AACnB,cAAMM,MAAM,CAAC;AAACN,UAAAA,GAAG,EAAEH;AAAN,SAAD,CAAZ;AACD;AACF,KALA;;AAMD,WAAOO,OAAP;AACD,GAdQ,EAcN,EAdM,CAAT;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEF,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA1BD;;AA4BA,eAAeJ,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport ActionsContext from '../../Contexts/ActionsContext';\r\nimport SSHTerminal from '../../Terminals/SSHTerminal';\r\nimport { RESET_CMD } from '../../constants';\r\n\r\nconst NodeSSH = () => {\r\n  const {ip, cmd} = useParams<any>()\r\n  const { sshTerm } = useContext(ActionsContext)\r\n\r\n  const [term, setTerm] = useState<any>()\r\n  useEffect(() => {\r\n    const {term, endTerm, startTerm, runCmd} = sshTerm({\r\n      host: ip,\r\n      username: \"root\",\r\n      interactive: true,\r\n    })\r\n    setTerm(term)\r\n    ;(async () => {\r\n      await startTerm()\r\n      if (cmd === \"reset\") {\r\n        await runCmd({cmd: RESET_CMD})\r\n      }\r\n    })()\r\n    return endTerm\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <br />\r\n      <SSHTerminal term={term} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NodeSSH"]},"metadata":{},"sourceType":"module"}