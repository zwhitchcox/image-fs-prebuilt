{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import{useParams}from'react-router-dom';import ActionsContext from'../../Contexts/ActionsContext';import SSHTerminal from'../../Terminals/SSHTerminal';import{RESET_CMD}from'../../constants';var NodeSSH=function NodeSSH(){var _useParams=useParams(),ip=_useParams.ip,cmd=_useParams.cmd;var _useContext=useContext(ActionsContext),sshTerm=_useContext.sshTerm;var _useState=useState(),_useState2=_slicedToArray(_useState,2),term=_useState2[0],setTerm=_useState2[1];useEffect(function(){var _sshTerm=sshTerm({host:ip,username:\"root\",interactive:true}),term=_sshTerm.term,endTerm=_sshTerm.endTerm,startTerm=_sshTerm.startTerm,runCmd=_sshTerm.runCmd;setTerm(term);_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return startTerm();case 2:if(!(cmd===\"reset\")){_context.next=5;break;}_context.next=5;return runCmd({cmd:RESET_CMD});case 5:case\"end\":return _context.stop();}}},_callee);}))();return endTerm;},[]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(SSHTerminal,{term:term}));};export default NodeSSH;","map":{"version":3,"sources":["C:/Users/zwhit/dev/cruster/app/src/Clusters/Manage/NodeSSH.tsx"],"names":["React","useContext","useEffect","useState","useParams","ActionsContext","SSHTerminal","RESET_CMD","NodeSSH","ip","cmd","sshTerm","term","setTerm","host","username","interactive","endTerm","startTerm","runCmd"],"mappings":"0dAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,CAAuCC,QAAvC,KAAuD,OAAvD,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,OAASC,SAAT,KAA0B,iBAA1B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,gBACFJ,SAAS,EADP,CACbK,EADa,YACbA,EADa,CACTC,GADS,YACTA,GADS,iBAEAT,UAAU,CAACI,cAAD,CAFV,CAEZM,OAFY,aAEZA,OAFY,eAIIR,QAAQ,EAJZ,wCAIbS,IAJa,eAIPC,OAJO,eAKpBX,SAAS,CAAC,UAAM,cAC6BS,OAAO,CAAC,CACjDG,IAAI,CAAEL,EAD2C,CAEjDM,QAAQ,CAAE,MAFuC,CAGjDC,WAAW,CAAE,IAHoC,CAAD,CADpC,CACPJ,IADO,UACPA,IADO,CACDK,OADC,UACDA,OADC,CACQC,SADR,UACQA,SADR,CACmBC,MADnB,UACmBA,MADnB,CAMdN,OAAO,CAACD,IAAD,CAAP,CACC,wDAAC,yJACMM,CAAAA,SAAS,EADf,aAEIR,GAAG,GAAK,OAFZ,gDAGQS,CAAAA,MAAM,CAAC,CAACT,GAAG,CAAEH,SAAN,CAAD,CAHd,uDAAD,KAMD,MAAOU,CAAAA,OAAP,CACD,CAdQ,CAcN,EAdM,CAAT,CAeA,mBACE,4CACE,8BADF,cAEE,oBAAC,WAAD,EAAa,IAAI,CAAEL,IAAnB,EAFF,CADF,CAMD,CA1BD,CA4BA,cAAeJ,CAAAA,OAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport ActionsContext from '../../Contexts/ActionsContext';\r\nimport SSHTerminal from '../../Terminals/SSHTerminal';\r\nimport { RESET_CMD } from '../../constants';\r\n\r\nconst NodeSSH = () => {\r\n  const {ip, cmd} = useParams<any>()\r\n  const { sshTerm } = useContext(ActionsContext)\r\n\r\n  const [term, setTerm] = useState<any>()\r\n  useEffect(() => {\r\n    const {term, endTerm, startTerm, runCmd} = sshTerm({\r\n      host: ip,\r\n      username: \"root\",\r\n      interactive: true,\r\n    })\r\n    setTerm(term)\r\n    ;(async () => {\r\n      await startTerm()\r\n      if (cmd === \"reset\") {\r\n        await runCmd({cmd: RESET_CMD})\r\n      }\r\n    })()\r\n    return endTerm\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <br />\r\n      <SSHTerminal term={term} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NodeSSH"]},"metadata":{},"sourceType":"module"}