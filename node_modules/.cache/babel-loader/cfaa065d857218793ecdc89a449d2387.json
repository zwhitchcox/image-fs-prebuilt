{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\src\\\\App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Clusters from './Clusters/Clusters';\nimport Image from './Image/Image';\nimport Settings from './Cmpt/Settings';\nimport GearIcon from \"./Cmpt/GearIcon.svg\";\nimport LogIcon from \"./Cmpt/LogIcon.svg\";\nimport Log from './Cmpt/Log';\nimport SettingsContext from './Contexts/SettingsContext';\nimport { v4 } from 'uuid';\nimport ActionsContext from './Contexts/ActionsContext';\nimport SystemInfoContext from './Contexts/SystemInfoContext';\nimport { Terminal } from 'xterm';\nimport \"xterm/css/xterm.css\";\nconst {\n  stringify,\n  parse\n} = JSON;\n\nconst copy = obj => parse(stringify(obj));\n\nconst compare = (obj1, obj2) => stringify(obj1) === stringify(obj2);\n\nlet _systemInfo;\n\nlet _log = \"\";\n\nfunction App() {\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  const showSettings = () => setSettingsOpen(true);\n\n  const closeSettings = () => setSettingsOpen(false);\n\n  const [settings, setSettings] = useState(ipcRenderer.sendSync('get-settings'));\n  useEffect(() => {\n    ipcRenderer.on(\"settings-changed\", (event, newSettings) => {\n      setSettings(newSettings);\n    });\n  }, []);\n  const [showLog, setShowLog] = useState(false);\n\n  const toggleLog = () => setShowLog(!showLog);\n\n  const [log, setLog] = useState(\"\");\n\n  const addToLog = item => {\n    if (_log > log) {\n      return setLog(_log = _log + \"\\n\" + item);\n    }\n\n    setLog(_log = log + \"\\n\" + item);\n  };\n\n  const runAction = ({\n    type,\n    status,\n    args,\n    onComplete,\n    onProgress,\n    onError,\n    onData,\n    id\n  }) => {\n    return new Promise((res, rej) => {\n      addToLog(status);\n      id = id || v4();\n\n      const _onData = (_, msg) => {\n        if (msg.id !== id) return;\n\n        if (typeof onData === \"function\") {\n          onData(msg);\n        }\n      };\n\n      const _onProgress = (_, msg) => {\n        if (msg.id !== id) return;\n\n        if (typeof onProgress === \"function\") {\n          onProgress(msg);\n        }\n      };\n\n      const _onComplete = (_, msg) => {\n        if (msg.id !== id) return;\n        addToLog(msg.status);\n\n        if (typeof onComplete === \"function\") {\n          onComplete(msg);\n        }\n\n        cleanUp();\n        res(msg);\n      };\n\n      const _onError = (_, msg) => {\n        if (msg.id !== id) return;\n        addToLog(msg.error);\n\n        if (typeof onError === \"function\") {\n          onError(msg);\n        }\n\n        cleanUp();\n        rej(msg);\n      };\n\n      const cleanUp = () => {\n        ipcRenderer.off(\"data\", _onData);\n        ipcRenderer.off(\"error\", _onError);\n        ipcRenderer.off(\"progress\", _onProgress);\n        ipcRenderer.off(\"complete\", _onComplete);\n      };\n\n      ipcRenderer.on(\"data\", _onData);\n      ipcRenderer.on(\"error\", _onError);\n      ipcRenderer.on(\"progress\", _onProgress);\n      ipcRenderer.on(\"complete\", _onComplete);\n      ipcRenderer.send(\"run-action\", {\n        id,\n        type,\n        ...args\n      });\n    });\n  };\n\n  const sshTerm = ({\n    host,\n    username,\n    interactive\n  }) => {\n    const term = new Terminal({\n      cols: 80,\n      rows: 24\n    });\n    const id = v4();\n\n    if (interactive) {\n      term.onData(data => {\n        ipcRenderer.send(\"run-action\", {\n          type: \"ssh-data\",\n          id,\n          data\n        });\n      });\n      ipcRenderer.on('data', (_, msg) => {\n        if (msg.id !== id) return;\n\n        if ([\"data\", \"error\"].includes(msg.type)) {\n          term.write(msg.data);\n        }\n\n        if (msg.type === \"exit-code\") {\n          addToLog(\"exit status: \" + msg.code);\n        }\n      });\n    }\n\n    const startTerm = () => runAction({\n      status: \"Starting ssh term \",\n      type: \"start-ssh-term\",\n      args: {\n        host,\n        interactive\n      },\n      id\n    });\n\n    const curData = {\n      gathering: false,\n      data: \"\"\n    };\n\n    const runCmd = ({\n      cmd,\n      status\n    }) => {\n      return runAction({\n        type: \"run-ssh-cmd\",\n        status,\n        id,\n        args: {\n          cmd\n        },\n        onData: msg => {\n          if ([\"data\", \"error\"].includes(msg.type)) {\n            if (curData.gathering) {\n              curData.data += msg.data;\n            }\n\n            term.write(msg.data);\n          }\n\n          if (msg.type === \"exit-code\") {\n            addToLog(\"exit status: \" + msg.code);\n          }\n        }\n      });\n    };\n\n    const runCmdInteractive = async ({\n      cmd\n    }) => {\n      // ipcRenderer.send(\"run-action\", {\n      //   type: \"ssh-data\",\n      //   id,\n      //   data: cmd + \"\\n\",\n      // })\n      await runAction({\n        type: \"run-interactive\",\n        args: {\n          cmd,\n          procID: id,\n          ip: host\n        }\n      });\n    };\n\n    const getOutput = async ({\n      cmd\n    }) => {\n      curData.gathering = true;\n      await runCmd({\n        cmd,\n        status: `Gathering output for ${cmd}`\n      });\n      const result = curData.data;\n      curData.gathering = false;\n      curData.data = \"\";\n      return result;\n    };\n\n    const endTerm = () => runAction({\n      status: `Ending terminal session ${username}@${host}`,\n      type: \"end-ssh-term\",\n      id\n    });\n\n    return {\n      term,\n      runCmd: interactive ? runCmdInteractive : runCmd,\n      endTerm,\n      startTerm,\n      getOutput\n    };\n  };\n\n  const multiSSH = ({\n    ips,\n    username,\n    interactive\n  }) => {\n    const processes = ips.map(ip => ({ ...sshTerm({\n        host: ip,\n        username,\n        interactive\n      }),\n      ip\n    }));\n\n    const runAll = async ({\n      cmd,\n      status\n    }) => {\n      await Promise.all(processes.map(({\n        ip,\n        runCmd\n      }) => runCmd({\n        cmd,\n        status: `${status} on ${ip}`\n      })));\n    };\n\n    const startAll = async () => await Promise.all(processes.map(({\n      startTerm\n    }) => startTerm()));\n\n    const endAll = async () => await Promise.all(processes.map(({\n      endTerm\n    }) => endTerm()));\n\n    const getOutput = async ({\n      cmd\n    }) => await Promise.all(processes.map(({\n      getOutput\n    }) => getOutput(cmd)));\n\n    return {\n      processes,\n      runAll,\n      startAll,\n      endAll,\n      getOutput\n    };\n  };\n\n  const [systemInfo, setSystemInfo] = useState(ipcRenderer.sendSync(\"get-system-info\"));\n  useEffect(() => {\n    _systemInfo = ipcRenderer.sendSync('get-system-info');\n    ipcRenderer.on(\"system-info\", (evt, msg) => {\n      console.log(msg);\n\n      if (!compare(msg, _systemInfo)) {\n        setSystemInfo(_systemInfo = msg);\n      }\n    });\n    setSystemInfo(ipcRenderer.sendSync('get-system-info'));\n  }, []);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SettingsContext.Provider, {\n    value: { ...settings,\n      showSettings,\n      closeSettings\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ActionsContext.Provider, {\n    value: {\n      runAction,\n      addToLog,\n      sshTerm,\n      multiSSH\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SystemInfoContext.Provider, {\n    value: systemInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 5\n    }\n  }, showLog ? /*#__PURE__*/React.createElement(Log, {\n    log: log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 16\n    }\n  }) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: LogIcon,\n    alt: \"Log Icon\",\n    className: \"log-icon\",\n    onClick: toggleLog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: GearIcon,\n    alt: \"Settings Icon\",\n    className: \"settings-icon\",\n    onClick: showSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, \"CRUSTER\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"justified-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 15\n    }\n  }, \"Image\"))), /*#__PURE__*/React.createElement(Link, {\n    to: \"/clusters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, \"Clusters\"))))), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Settings, Object.assign({\n    closeSettings,\n    settingsOpen\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/clusters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Clusters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }))))))))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/zwhit/dev/cruster/app/src/App.tsx"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","Clusters","Image","Settings","Log","SettingsContext","v4","ActionsContext","SystemInfoContext","Terminal","stringify","parse","JSON","copy","obj","compare","obj1","obj2","_systemInfo","_log","App","settingsOpen","setSettingsOpen","showSettings","closeSettings","settings","setSettings","ipcRenderer","sendSync","on","event","newSettings","showLog","setShowLog","toggleLog","log","setLog","addToLog","item","runAction","type","status","args","onComplete","onProgress","onError","onData","id","Promise","res","rej","_onData","_","msg","_onProgress","_onComplete","cleanUp","_onError","error","off","send","sshTerm","host","username","interactive","term","cols","rows","data","includes","write","code","startTerm","curData","gathering","runCmd","cmd","runCmdInteractive","procID","ip","getOutput","result","endTerm","multiSSH","ips","processes","map","runAll","all","startAll","endAll","systemInfo","setSystemInfo","evt","console","LogIcon","GearIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Clusters from './Clusters/Clusters';\r\nimport Image from './Image/Image'\r\nimport Settings from './Cmpt/Settings';\r\nimport GearIcon from './Cmpt/GearIcon.svg'\r\nimport LogIcon from './Cmpt/LogIcon.svg'\r\nimport Log from './Cmpt/Log'\r\nimport SettingsContext from './Contexts/SettingsContext'\r\nimport { v4 } from 'uuid'\r\nimport ActionsContext from './Contexts/ActionsContext';\r\nimport SystemInfoContext from './Contexts/SystemInfoContext';\r\nimport { Terminal } from 'xterm'\r\nimport \"xterm/css/xterm.css\"\r\n\r\n\r\nconst {stringify, parse} = JSON\r\nconst copy = obj => parse(stringify(obj))\r\nconst compare = (obj1, obj2) => stringify(obj1) === stringify(obj2)\r\nlet _systemInfo;\r\n\r\nlet _log = \"\"\r\nfunction App() {\r\n  const [settingsOpen, setSettingsOpen] = useState(false)\r\n  const showSettings = () => setSettingsOpen(true)\r\n  const closeSettings = () => setSettingsOpen(false)\r\n  const [settings, setSettings] = useState(ipcRenderer.sendSync('get-settings'))\r\n  useEffect(() => {\r\n    ipcRenderer.on(\"settings-changed\", (event, newSettings) => {\r\n      setSettings(newSettings)\r\n    })\r\n  }, [])\r\n\r\n  const [showLog,setShowLog] = useState(false)\r\n  const toggleLog = () => setShowLog(!showLog)\r\n  const [log, setLog] = useState(\"\")\r\n  const addToLog = item => {\r\n    if (_log > log) {\r\n      return setLog(_log = _log + \"\\n\" + item)\r\n    }\r\n    setLog(_log = (log + \"\\n\" + item))\r\n  }\r\n  const runAction = ({type, status, args, onComplete, onProgress, onError, onData, id}) => {\r\n    return new Promise((res,rej) => {\r\n      addToLog(status)\r\n      id = id || v4()\r\n      const _onData = (_, msg) => {\r\n        if (msg.id !== id) return\r\n        if (typeof onData === \"function\") {\r\n          onData(msg)\r\n        }\r\n      }\r\n      const _onProgress = (_, msg) => {\r\n        if (msg.id !== id) return\r\n        if (typeof onProgress === \"function\") {\r\n          onProgress(msg)\r\n        }\r\n      }\r\n      const _onComplete = (_, msg) => {\r\n        if (msg.id !== id) return\r\n        addToLog(msg.status)\r\n        if (typeof onComplete === \"function\") {\r\n          onComplete(msg)\r\n        }\r\n        cleanUp()\r\n        res(msg)\r\n      }\r\n      const _onError = (_, msg) => {\r\n        if (msg.id !== id) return\r\n        addToLog(msg.error)\r\n        if (typeof onError === \"function\") {\r\n          onError(msg)\r\n        }\r\n        cleanUp()\r\n        rej(msg)\r\n      }\r\n      const cleanUp = () => {\r\n        ipcRenderer.off(\"data\", _onData)\r\n        ipcRenderer.off(\"error\", _onError)\r\n        ipcRenderer.off(\"progress\", _onProgress)\r\n        ipcRenderer.off(\"complete\", _onComplete)\r\n      }\r\n\r\n      ipcRenderer.on(\"data\", _onData)\r\n      ipcRenderer.on(\"error\", _onError)\r\n      ipcRenderer.on(\"progress\", _onProgress)\r\n      ipcRenderer.on(\"complete\", _onComplete)\r\n\r\n      ipcRenderer.send(\"run-action\", {id, type, ...args})\r\n    })\r\n  }\r\n  const sshTerm = ({host, username, interactive}) => {\r\n    const term = new Terminal({ cols: 80, rows: 24})\r\n    const id = v4()\r\n    if (interactive) {\r\n      term.onData(data => {\r\n        ipcRenderer.send(\"run-action\", {\r\n          type: \"ssh-data\",\r\n          id,\r\n          data,\r\n        })\r\n      })\r\n      ipcRenderer.on('data', (_, msg) => {\r\n        if (msg.id !== id) return\r\n        if ([\"data\", \"error\"].includes(msg.type)) {\r\n          term.write(msg.data)\r\n        }\r\n        if (msg.type === \"exit-code\") {\r\n          addToLog(\"exit status: \" + msg.code)\r\n        }\r\n      })\r\n    }\r\n    const startTerm = () => runAction(({\r\n      status: \"Starting ssh term \",\r\n      type: \"start-ssh-term\",\r\n      args: {\r\n        host,\r\n        interactive,\r\n      },\r\n      id,\r\n    }) as any)\r\n    const curData = {\r\n      gathering: false,\r\n      data: \"\",\r\n    }\r\n    const runCmd = ({cmd, status}) => {\r\n      return runAction(({\r\n        type: \"run-ssh-cmd\",\r\n        status,\r\n        id,\r\n        args: {cmd},\r\n        onData: msg => {\r\n          if ([\"data\", \"error\"].includes(msg.type)) {\r\n            if (curData.gathering) {\r\n              curData.data += msg.data\r\n            }\r\n            term.write(msg.data)\r\n          }\r\n          if (msg.type === \"exit-code\") {\r\n            addToLog(\"exit status: \" + msg.code)\r\n          }\r\n        }\r\n      }) as any)\r\n    }\r\n    const runCmdInteractive = async ({cmd}) => {\r\n      // ipcRenderer.send(\"run-action\", {\r\n      //   type: \"ssh-data\",\r\n      //   id,\r\n      //   data: cmd + \"\\n\",\r\n      // })\r\n\r\n      await runAction({\r\n        type: \"run-interactive\",\r\n        args: {\r\n          cmd,\r\n          procID: id,\r\n          ip: host,\r\n        },\r\n      } as any)\r\n    }\r\n\r\n    const getOutput = async ({cmd}) => {\r\n      curData.gathering = true\r\n      await runCmd({cmd, status: `Gathering output for ${cmd}`})\r\n      const result = curData.data\r\n      curData.gathering = false\r\n      curData.data = \"\"\r\n      return result\r\n    }\r\n\r\n    const endTerm = () => (\r\n      runAction(({\r\n        status: `Ending terminal session ${username}@${host}`,\r\n        type: \"end-ssh-term\",\r\n        id,\r\n      }) as any)\r\n    )\r\n\r\n    return {\r\n      term,\r\n      runCmd: interactive ? runCmdInteractive : runCmd,\r\n      endTerm,\r\n      startTerm,\r\n      getOutput,\r\n    }\r\n  }\r\n\r\n  const multiSSH = ({ips, username, interactive}) => {\r\n    const processes = ips.map(ip => ({...sshTerm({host: ip, username, interactive}), ip}))\r\n    const runAll = async ({cmd, status}) => {\r\n      await Promise.all(processes.map(({ip, runCmd}) => runCmd({cmd, status: `${status} on ${ip}`})))\r\n    }\r\n    const startAll = async() => (\r\n      await Promise.all(processes.map(({startTerm}) => startTerm()))\r\n    )\r\n    const endAll = async() => (\r\n      await Promise.all(processes.map(({endTerm}) => endTerm()))\r\n    )\r\n    const getOutput = async({cmd}) => (\r\n      await Promise.all(processes.map(({getOutput}) => getOutput(cmd)))\r\n    )\r\n\r\n    return {\r\n      processes,\r\n      runAll,\r\n      startAll,\r\n      endAll,\r\n      getOutput\r\n    }\r\n  }\r\n\r\n\r\n  const [systemInfo, setSystemInfo] = useState(ipcRenderer.sendSync(\"get-system-info\"))\r\n  useEffect(() => {\r\n    _systemInfo = ipcRenderer.sendSync('get-system-info')\r\n    ipcRenderer.on(\"system-info\", (evt, msg) => {\r\n      console.log(msg)\r\n      if (!compare(msg, _systemInfo)) {\r\n        setSystemInfo(_systemInfo = msg)\r\n      }\r\n    })\r\n    setSystemInfo(ipcRenderer.sendSync('get-system-info'))\r\n  }, [])\r\n\r\n  return (\r\n    <Router>\r\n    <SettingsContext.Provider value={{\r\n      ...settings,\r\n      showSettings,\r\n      closeSettings,\r\n      }}>\r\n    <ActionsContext.Provider value={{runAction, addToLog, sshTerm, multiSSH}} >\r\n    <SystemInfoContext.Provider value={systemInfo}>\r\n    {showLog ? <Log log={log} /> : \"\"}\r\n    <div className=\"App-container\">\r\n    <img\r\n      src={LogIcon}\r\n      alt=\"Log Icon\"\r\n      className=\"log-icon\"\r\n      onClick={toggleLog} />\r\n    <img\r\n      src={GearIcon}\r\n      alt=\"Settings Icon\"\r\n      className=\"settings-icon\"\r\n      onClick={showSettings} />\r\n    <div className=\"App\">\r\n      <nav>\r\n        <h1>CRUSTER</h1>\r\n        <div className=\"justified-container\">\r\n          <Link to=\"/image\">\r\n            <div className=\"btn btn-one\">\r\n              <span>Image</span>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/clusters\">\r\n          <div className=\"btn btn-one\">\r\n            <span>Clusters</span>\r\n          </div>\r\n          </Link>\r\n        </div>\r\n        {/* <pre>{JSON.stringify(nodes, null, 2)}</pre> */}\r\n      </nav>\r\n      <main>\r\n      <Settings {...({closeSettings, settingsOpen})} />\r\n      <br />\r\n      <Switch>\r\n        <Route path=\"/clusters\">\r\n          <Clusters />\r\n        </Route>\r\n        <Route path=\"/image\">\r\n          <Image />\r\n        </Route>\r\n      </Switch>\r\n      </main>\r\n    </div>\r\n    </div>\r\n    </SystemInfoContext.Provider>\r\n    </ActionsContext.Provider>\r\n    </SettingsContext.Provider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}