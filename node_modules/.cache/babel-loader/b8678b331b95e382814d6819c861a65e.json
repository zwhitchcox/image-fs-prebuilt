{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\src\\\\Clusters\\\\Manage\\\\RunMultipleSSH.tsx\";\nimport React, { useState } from 'react';\nimport SSHTerminal from '../../Terminals/SSHTerminal';\nimport { useEffect } from 'react';\nconst hiddenClass = {\n  visibility: \"hidden\",\n  position: \"absolute\"\n};\n\nconst sortByIP = (a, b) => lastNumIP(a.ip) - lastNumIP(b.ip);\n\nconst lastNumIP = ip => Number(ip.split('.')[3]);\n\nconst RunMultipleSSH = ({\n  processes,\n  finished,\n  showInit\n}) => {\n  const [showTerms, setShowTerms] = useState([]);\n  useEffect(() => {\n    if (processes.length) {\n      setShowTerms(processes.map(() => showInit));\n    }\n  }, [processes]);\n\n  if (!processes.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const procs = processes.slice();\n  procs.sort(sortByIP);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, finished ? `Finished ${processes.length} tasks` : \"Working...\"), procs.map((proc, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        const newShowTerms = showTerms.slice();\n        newShowTerms[i] = !newShowTerms[i];\n        setShowTerms(newShowTerms);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, \"Show/Hide \", proc.ip), /*#__PURE__*/React.createElement(\"div\", {\n      style: { ...(showTerms[i] ? {} : hiddenClass)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SSHTerminal, {\n      term: proc.term,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    })));\n  }));\n};\n\nexport default RunMultipleSSH;","map":{"version":3,"sources":["C:/Users/zwhit/dev/cruster/app/src/Clusters/Manage/RunMultipleSSH.tsx"],"names":["React","useState","SSHTerminal","useEffect","hiddenClass","visibility","position","sortByIP","a","b","lastNumIP","ip","Number","split","RunMultipleSSH","processes","finished","showInit","showTerms","setShowTerms","length","map","procs","slice","sort","proc","i","newShowTerms","term"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,UAAU,EAAE,QADM;AAElBC,EAAAA,QAAQ,EAAE;AAFQ,CAApB;;AAIA,MAAMC,QAAQ,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUC,SAAS,CAACF,CAAC,CAACG,EAAH,CAAT,GAAkBD,SAAS,CAACD,CAAC,CAACE,EAAH,CAAtD;;AACA,MAAMD,SAAS,GAAGC,EAAE,IAAIC,MAAM,CAACD,EAAE,CAACE,KAAH,CAAS,GAAT,EAAc,CAAd,CAAD,CAA9B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA;AAAtB,CAAD,KAAqC;AAC1D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAY,EAAZ,CAA1C;AACAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,SAAS,CAACK,MAAd,EAAsB;AACpBD,MAAAA,YAAY,CAACJ,SAAS,CAACM,GAAV,CAAc,MAAMJ,QAApB,CAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACF,SAAD,CAJM,CAAT;;AAKA,MAAI,CAACA,SAAS,CAACK,MAAf,EAAuB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,QAAME,KAAK,GAAGP,SAAS,CAACQ,KAAV,EAAd;AACAD,EAAAA,KAAK,CAACE,IAAN,CAAWjB,QAAX;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKS,QAAQ,GAAI,YAAWD,SAAS,CAACK,MAAO,QAAhC,GAA0C,YAAvD,CAFF,EAGGE,KAAK,CAACD,GAAN,CAAU,CAACI,IAAD,EAAOC,CAAP,KAAa;AACtB,wBACE;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AACE,MAAA,OAAO,EAAE,MAAM;AACb,cAAMC,YAAY,GAAGT,SAAS,CAACK,KAAV,EAArB;AACAI,QAAAA,YAAY,CAACD,CAAD,CAAZ,GAAkB,CAACC,YAAY,CAACD,CAAD,CAA/B;AACAP,QAAAA,YAAY,CAACQ,YAAD,CAAZ;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAMeF,IAAI,CAACd,EANpB,CADA,eASA;AAAK,MAAA,KAAK,EAAE,EAAC,IAAIO,SAAS,CAACQ,CAAD,CAAT,GAAe,EAAf,GAAoBtB,WAAxB;AAAD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEqB,IAAI,CAACG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATA,CADF;AAgBD,GAjBA,CAHH,CADF;AAwBD,CApCD;;AAsCA,eAAed,cAAf","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport SSHTerminal from '../../Terminals/SSHTerminal'\r\nimport { useEffect } from 'react';\r\n\r\nconst hiddenClass = {\r\n  visibility: \"hidden\",\r\n  position: \"absolute\",\r\n}\r\nconst sortByIP = (a, b) => lastNumIP(a.ip) - lastNumIP(b.ip)\r\nconst lastNumIP = ip => Number(ip.split('.')[3])\r\n\r\nconst RunMultipleSSH = ({processes, finished, showInit}) => {\r\n  const [showTerms, setShowTerms] = useState<boolean[]>([])\r\n  useEffect(() => {\r\n    if (processes.length) {\r\n      setShowTerms(processes.map(() => showInit))\r\n    }\r\n  }, [processes])\r\n  if (!processes.length) {\r\n    return <div />\r\n  }\r\n  const procs = processes.slice()\r\n  procs.sort(sortByIP)\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h4>{finished ? `Finished ${processes.length} tasks` : \"Working...\"}</h4>\r\n      {procs.map((proc, i) => {\r\n        return (\r\n          <div key={i}>\r\n          <button\r\n            onClick={() => {\r\n              const newShowTerms = showTerms.slice()\r\n              newShowTerms[i] = !newShowTerms[i]\r\n              setShowTerms(newShowTerms)\r\n            }}>\r\n              Show/Hide {proc.ip}\r\n          </button>\r\n          <div style={{...(showTerms[i] ? {} : hiddenClass)} as any}>\r\n            <br />\r\n            <SSHTerminal term={proc.term} />\r\n          </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RunMultipleSSH"]},"metadata":{},"sourceType":"module"}