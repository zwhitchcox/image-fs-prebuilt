{"ast":null,"code":"import React,{useContext}from'react';import\"./Settings.css\";import Modal from'./Modal';import SettingsContext from'../Contexts/SettingsContext';import{IS_DEV}from'../constants';var Settings=function Settings(_ref){var closeSettings=_ref.closeSettings,settingsOpen=_ref.settingsOpen;var settings=useContext(SettingsContext);var changeAsync=function changeAsync(type){return function(){ipcRenderer.send(\"change-setting\",{type:type});};};var changeStr=function changeStr(type){return function(e){ipcRenderer.send(\"change-setting\",{type:type,val:e.target.value});};};var changePersist=function changePersist(){ipcRenderer.send(\"change-setting\",{type:\"persist-sudo-password\",val:!settings.persistSudoPassword});};return/*#__PURE__*/React.createElement(Modal,{isModalOpen:settingsOpen,closeModal:closeSettings},/*#__PURE__*/React.createElement(\"div\",{className:\"settings\"},/*#__PURE__*/React.createElement(\"h4\",null,\"General\"),/*#__PURE__*/React.createElement(\"div\",{className:\"dir-container\"},/*#__PURE__*/React.createElement(\"div\",null,\"Cruster Directory: \\xA0\",settings.crusterDir),/*#__PURE__*/React.createElement(\"button\",{onClick:changeAsync(\"cruster-dir\")},\"Change\")),!IS_DEV?\"\":/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"label\",{className:\"text-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"text\"},\"Your Sudo Password For This Computer:\"),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Your Sudo Password\",className:\"text-field-sudo\",type:\"password\",onChange:changeStr(\"sudo-password\"),value:settings.sudoPassword})),/*#__PURE__*/React.createElement(\"label\",{className:\"checkbox-container indent-1\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:settings.persistSudoPassword,onChange:changePersist}),\"Persistently Store Password (Note: Do this at your own risk)\",/*#__PURE__*/React.createElement(\"span\",{className:\"checkmark\"}))),/*#__PURE__*/React.createElement(\"h4\",null,\"SSH Keys\"),/*#__PURE__*/React.createElement(\"label\",{className:\"text-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"text\"},\"Default Github Username:\"),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Your Github Username\",className:\"text-field\",type:\"text\",onChange:changeStr(\"default-github-username\"),value:settings.defaultGithubUsername})),/*#__PURE__*/React.createElement(\"div\",{className:\"key-file\"},/*#__PURE__*/React.createElement(\"div\",null,\"Public key file: \",settings.publicKeyFile),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:changeAsync(\"public-key-file\")},\"Change\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"key-file\"},/*#__PURE__*/React.createElement(\"div\",null,\"Private key file: \",settings.privateKeyFile),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:changeAsync(\"private-key-file\")},\"Change\"))),/*#__PURE__*/React.createElement(\"h4\",null,\"Wifi Credentials\"),/*#__PURE__*/React.createElement(\"label\",{className:\"text-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"text\"},\"Default SSID (Wifi Name):\"),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Network SSID\",className:\"text-field\",type:\"text\",onChange:changeStr(\"default-ssid\"),value:settings.defaultSSID})),/*#__PURE__*/React.createElement(\"label\",{className:\"text-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"text\"},\"Default PSK (Wifi Password):\"),/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Network PSK\",className:\"text-field\",type:\"text\",onChange:changeStr(\"default-psk\"),value:settings.defaultPSK}))));};export default Settings;","map":{"version":3,"sources":["C:/Users/zwhit/dev/cruster/app/src/Cmpt/Settings.tsx"],"names":["React","useContext","Modal","SettingsContext","IS_DEV","Settings","closeSettings","settingsOpen","settings","changeAsync","type","ipcRenderer","send","changeStr","e","val","target","value","changePersist","persistSudoPassword","crusterDir","sudoPassword","defaultGithubUsername","publicKeyFile","privateKeyFile","defaultSSID","defaultPSK"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport \"./Settings.css\"\r\nimport Modal from './Modal';\r\nimport SettingsContext from '../Contexts/SettingsContext';\r\nimport { IS_DEV } from '../constants';\r\n\r\nconst Settings = ({closeSettings, settingsOpen}) => {\r\n  const settings = useContext(SettingsContext)\r\n  const changeAsync = type => () => {\r\n    ipcRenderer.send(\"change-setting\", {\r\n      type,\r\n    })\r\n  }\r\n  const changeStr = (type) => e => {\r\n    ipcRenderer.send(\"change-setting\", {\r\n      type,\r\n      val: e.target.value,\r\n    })\r\n  }\r\n  const changePersist = () => {\r\n    ipcRenderer.send(\"change-setting\", {\r\n      type: \"persist-sudo-password\",\r\n      val: !settings.persistSudoPassword,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Modal isModalOpen={settingsOpen} closeModal={closeSettings}>\r\n      <div className=\"settings\">\r\n      <h4>General</h4>\r\n      <div className=\"dir-container\">\r\n        <div>Cruster Directory: &nbsp;{settings.crusterDir}</div>\r\n        <button onClick={changeAsync(\"cruster-dir\")}>Change</button>\r\n      </div>\r\n      {!IS_DEV ? \"\" : <>\r\n      <label className=\"text-container\">\r\n        <div className=\"text\">Your Sudo Password For This Computer:</div>\r\n        <input\r\n            placeholder=\"Your Sudo Password\"\r\n            className=\"text-field-sudo\"\r\n            type=\"password\"\r\n            onChange={changeStr(\"sudo-password\")}\r\n            value={settings.sudoPassword}\r\n          />\r\n      </label>\r\n      <label className=\"checkbox-container indent-1\">\r\n        <input type=\"checkbox\"\r\n          checked={settings.persistSudoPassword}\r\n          onChange={changePersist}\r\n        />\r\n        Persistently Store Password (Note: Do this at your own risk)\r\n        <span className=\"checkmark\" />\r\n      </label>\r\n      </>}\r\n      <h4>SSH Keys</h4>\r\n      <label className=\"text-container\">\r\n        <div className=\"text\">Default Github Username:</div>\r\n        <input\r\n            placeholder=\"Your Github Username\"\r\n            className=\"text-field\"\r\n            type=\"text\"\r\n            onChange={changeStr(\"default-github-username\")}\r\n            value={settings.defaultGithubUsername}\r\n          />\r\n      </label>\r\n      <div className=\"key-file\">\r\n        <div>\r\n          Public key file: {settings.publicKeyFile}\r\n        </div>\r\n        <div>\r\n          <button onClick={changeAsync(\"public-key-file\")}>Change</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"key-file\">\r\n        <div>\r\n          Private key file: {settings.privateKeyFile}\r\n        </div>\r\n        <div>\r\n          <button onClick={changeAsync(\"private-key-file\")}>Change</button>\r\n        </div>\r\n      </div>\r\n      <h4>Wifi Credentials</h4>\r\n      <label className=\"text-container\">\r\n        <div className=\"text\">Default SSID (Wifi Name):</div>\r\n        <input\r\n            placeholder=\"Network SSID\"\r\n            className=\"text-field\"\r\n            type=\"text\"\r\n            onChange={changeStr(\"default-ssid\")}\r\n            value={settings.defaultSSID}\r\n          />\r\n      </label>\r\n      <label className=\"text-container\">\r\n        <div className=\"text\">Default PSK (Wifi Password):</div>\r\n        <input\r\n            placeholder=\"Network PSK\"\r\n            className=\"text-field\"\r\n            type=\"text\"\r\n            onChange={changeStr(\"default-psk\")}\r\n            value={settings.defaultPSK}\r\n          />\r\n      </label>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n"]},"metadata":{},"sourceType":"module"}