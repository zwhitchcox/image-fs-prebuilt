{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\zwhit\\\\dev\\\\cruster\\\\app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import SSHTerminal from'../../Terminals/SSHTerminal';import{useEffect}from'react';var hiddenClass={visibility:\"hidden\",position:\"absolute\"};var sortByIP=function sortByIP(a,b){return lastNumIP(a.ip)-lastNumIP(b.ip);};var lastNumIP=function lastNumIP(ip){return Number(ip.split('.')[3]);};var RunMultipleSSH=function RunMultipleSSH(_ref){var processes=_ref.processes,finished=_ref.finished,showInit=_ref.showInit;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),showTerms=_useState2[0],setShowTerms=_useState2[1];useEffect(function(){if(processes.length){setShowTerms(processes.map(function(){return showInit;}));}},[processes]);if(!processes.length){return/*#__PURE__*/React.createElement(\"div\",null);}var procs=processes.slice();procs.sort(sortByIP);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h4\",null,finished?\"Finished \".concat(processes.length,\" tasks\"):\"Working...\"),procs.map(function(proc,i){return/*#__PURE__*/React.createElement(\"div\",{key:i},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){var newShowTerms=showTerms.slice();newShowTerms[i]=!newShowTerms[i];setShowTerms(newShowTerms);}},\"Show/Hide \",proc.ip),/*#__PURE__*/React.createElement(\"div\",{style:_objectSpread({},showTerms[i]?{}:hiddenClass)},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(SSHTerminal,{term:proc.term})));}));};export default RunMultipleSSH;","map":{"version":3,"sources":["C:/Users/zwhit/dev/cruster/app/src/Clusters/Manage/RunMultipleSSH.tsx"],"names":["React","useState","SSHTerminal","useEffect","hiddenClass","visibility","position","sortByIP","a","b","lastNumIP","ip","Number","split","RunMultipleSSH","processes","finished","showInit","showTerms","setShowTerms","length","map","procs","slice","sort","proc","i","newShowTerms","term"],"mappings":"6TAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAA4C,OAA5C,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,OAASC,SAAT,KAA0B,OAA1B,CAEA,GAAMC,CAAAA,WAAW,CAAG,CAClBC,UAAU,CAAE,QADM,CAElBC,QAAQ,CAAE,UAFQ,CAApB,CAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,CAAD,CAAIC,CAAJ,QAAUC,CAAAA,SAAS,CAACF,CAAC,CAACG,EAAH,CAAT,CAAkBD,SAAS,CAACD,CAAC,CAACE,EAAH,CAArC,EAAjB,CACA,GAAMD,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,EAAE,QAAIC,CAAAA,MAAM,CAACD,EAAE,CAACE,KAAH,CAAS,GAAT,EAAc,CAAd,CAAD,CAAV,EAApB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAqC,IAAnCC,CAAAA,SAAmC,MAAnCA,SAAmC,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAdC,QAAc,MAAdA,QAAc,eACxBhB,QAAQ,CAAY,EAAZ,CADgB,wCACnDiB,SADmD,eACxCC,YADwC,eAE1DhB,SAAS,CAAC,UAAM,CACd,GAAIY,SAAS,CAACK,MAAd,CAAsB,CACpBD,YAAY,CAACJ,SAAS,CAACM,GAAV,CAAc,iBAAMJ,CAAAA,QAAN,EAAd,CAAD,CAAZ,CACD,CACF,CAJQ,CAIN,CAACF,SAAD,CAJM,CAAT,CAKA,GAAI,CAACA,SAAS,CAACK,MAAf,CAAuB,CACrB,mBAAO,+BAAP,CACD,CACD,GAAME,CAAAA,KAAK,CAAGP,SAAS,CAACQ,KAAV,EAAd,CACAD,KAAK,CAACE,IAAN,CAAWjB,QAAX,EACA,mBACE,4CACE,8BADF,cAEE,8BAAKS,QAAQ,oBAAeD,SAAS,CAACK,MAAzB,WAA0C,YAAvD,CAFF,CAGGE,KAAK,CAACD,GAAN,CAAU,SAACI,IAAD,CAAOC,CAAP,CAAa,CACtB,mBACE,2BAAK,GAAG,CAAEA,CAAV,eACA,8BACE,OAAO,CAAE,kBAAM,CACb,GAAMC,CAAAA,YAAY,CAAGT,SAAS,CAACK,KAAV,EAArB,CACAI,YAAY,CAACD,CAAD,CAAZ,CAAkB,CAACC,YAAY,CAACD,CAAD,CAA/B,CACAP,YAAY,CAACQ,YAAD,CAAZ,CACD,CALH,eAMeF,IAAI,CAACd,EANpB,CADA,cASA,2BAAK,KAAK,kBAAOO,SAAS,CAACQ,CAAD,CAAT,CAAe,EAAf,CAAoBtB,WAA3B,CAAV,eACE,8BADF,cAEE,oBAAC,WAAD,EAAa,IAAI,CAAEqB,IAAI,CAACG,IAAxB,EAFF,CATA,CADF,CAgBD,CAjBA,CAHH,CADF,CAwBD,CApCD,CAsCA,cAAed,CAAAA,cAAf","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport SSHTerminal from '../../Terminals/SSHTerminal'\r\nimport { useEffect } from 'react';\r\n\r\nconst hiddenClass = {\r\n  visibility: \"hidden\",\r\n  position: \"absolute\",\r\n}\r\nconst sortByIP = (a, b) => lastNumIP(a.ip) - lastNumIP(b.ip)\r\nconst lastNumIP = ip => Number(ip.split('.')[3])\r\n\r\nconst RunMultipleSSH = ({processes, finished, showInit}) => {\r\n  const [showTerms, setShowTerms] = useState<boolean[]>([])\r\n  useEffect(() => {\r\n    if (processes.length) {\r\n      setShowTerms(processes.map(() => showInit))\r\n    }\r\n  }, [processes])\r\n  if (!processes.length) {\r\n    return <div />\r\n  }\r\n  const procs = processes.slice()\r\n  procs.sort(sortByIP)\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h4>{finished ? `Finished ${processes.length} tasks` : \"Working...\"}</h4>\r\n      {procs.map((proc, i) => {\r\n        return (\r\n          <div key={i}>\r\n          <button\r\n            onClick={() => {\r\n              const newShowTerms = showTerms.slice()\r\n              newShowTerms[i] = !newShowTerms[i]\r\n              setShowTerms(newShowTerms)\r\n            }}>\r\n              Show/Hide {proc.ip}\r\n          </button>\r\n          <div style={{...(showTerms[i] ? {} : hiddenClass)} as any}>\r\n            <br />\r\n            <SSHTerminal term={proc.term} />\r\n          </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RunMultipleSSH"]},"metadata":{},"sourceType":"module"}